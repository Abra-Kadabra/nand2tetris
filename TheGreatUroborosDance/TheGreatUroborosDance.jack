class TheGreatUroborosDance {

    static TheGreatUroborosDance instance;
    field boolean exit;       // true when the game is over

    // 0 - up/north, 1 - down/south, 2 - left/west, 3 - right/east
    field int hdir;            // direction of head
    field int tdir;            // direction of tail

    constructor TheGreatUroborosDance new() {
        do makeUroboros(32, 16, 1); // отрисовываем максимального уробороса
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    function void newInstance() {
        let instance = TheGreatUroborosDance.new();
        return;
    }

    function PongGame getInstance() {
        return instance;
    }

    // поле 32х16 спрайтов: [0..31] cols, [0..15] rows; каждый спрайт 16х16 пикселей
    // берём левый верхний угол за точку отсчёта (0)
    // тогда координату для головы/хвоста можно представить как число, на которое они удалены от нуля,
    // по часовой стрелке (вне зависимости куда крутится сама анимация)
    method void makeUroboros(int width, int height, int counter) {
        var int row, col, i, j, head_row, head_col, tail_row, tail_col, addr; 
        var String l;
        let row = 8 - (height/2);
        let col = 16 - (width/2);

        // это пиздец, но переписывать не буду
        if (counter < (width+1)) { 
            let head_row = 0;
            let head_col = counter - 1;
            let hdir = 3;
            if (counter = 0) { 
                let head_row = 1;
                let head_col = 0;
                let hdir = 0; }
            if (counter = 1) { let hdir = 0; }
        }
        else { 
            if (counter < (width+height)) { 
                let head_row = counter - width;
                let head_col = width-1;
                let hdir = 1;
            }
            else {
                if (counter < (width*2+height-1)) { 
                    let head_row = height-1;
                    let head_col = 2*width + height - counter - 2;
                    let hdir = 2;
                }
                else {
                    let head_row = (2*height) + (2*width) - counter - 3;
                    let head_col = 0;
                    let hdir = 0;
                }
            }
        }
        if (counter < (width-1)) { 
            let tail_row = 0;
            let tail_col = counter;
            let tdir = 3;
            if (counter = 0) { let hdir = 0; }
        }
        else { 
            if (counter < (width+height-2)) { 
                let tail_row = counter - width + 1;
                let tail_col = width-1;
                let tdir = 1;
            }
            else {
                if (counter < (width*2+height-3)) { 
                    let tail_row = height-1;
                    let tail_col = 2*width + height - counter - 3;
                    let tdir = 2;
                }
                else {
                    let tail_row = (2*height) + (2*width) - counter - 4;
                    let tail_col = 0;
                    let tdir = 0;
                    if (counter = (width*2 + ((height-2)*2))) { let tdir = 3; }
                }
            }
        }

        let i = 0;
        while (i < height) {
            let j = 0;
            while (j < width) {
                let addr = (col + j) + ((row + i) * 512);
                // последняя или первая строка, выставляем углы
                if ((i = 0) | (i = (height-1))) { 
                    if (i = 0) {
                        if (j = 0) { do Sprites.lucorn(addr); }
                        if (j = (width-1)) { do Sprites.rucorn(addr); }
                    }
                    if (i = (height-1)) {
                        if (j = 0) { do Sprites.ldcorn(addr); }
                        if (j = (width-1)) { do Sprites.rdcorn(addr); }
                    }
                    if (~(j = (width-1)) & ~(j = 0)) { do Sprites.hbody(addr); }
                }
                // дорисовываем бока
                else {
                    if ((j = (width-1)) | (j = 0)) { do Sprites.vbody(addr); }
                }
                // рисуем голову и хвост
                if ((i = head_row) & (j = head_col)) {
                    if (hdir = 0) { do Sprites.uhead(addr); }
                    if (hdir = 1) { do Sprites.dhead(addr); }
                    if (hdir = 2) { do Sprites.lhead(addr); }
                    if (hdir = 3) { do Sprites.rhead(addr); }
                }
                if ((i = tail_row) & (j = tail_col)) {
                    if (tdir = 0) { do Sprites.utail(addr); }
                    if (tdir = 1) { do Sprites.dtail(addr); }
                    if (tdir = 2) { do Sprites.ltail(addr); }
                    if (tdir = 3) { do Sprites.rtail(addr); }
                }
                let j = j + 1;
            }
            let i = i + 1;
        }
        return;
    }


    // key codes: 140 - esc; up - 131; down - 133; left - 130; right - 132; space - 32
    method void run() {
        var char key;
        var int counter, width, height, length, cycle;
        var String hold;
        let cycle = 1;
        let width = 10;
        let height = 7;
        let length = width*2 + ((height-2)*2);
        let hold = "Hold space";        

        do Output.moveCursor(10,27);
        do Output.printString(hold);

        while (~exit) {
            if (key = 32) {
               let counter = counter + 1;
               do Sys.wait(50);
            }
            let key = Keyboard.keyPressed();
            if (key = 140) { let exit = true; }

            // Waits for the key to be released.
            while ((~(key = 32)) & (~exit)) {
                let key = Keyboard.keyPressed();
                do Sys.wait(50);
            }

            do makeUroboros(width, height, counter);
            if ((counter+1) > (length)) { 
                let cycle = cycle + 1;
                do makeUroboros(32, 16, cycle);
                let counter = 0; 
            }

	    if (exit) {
                do Output.moveCursor(10,27);
	        do Output.printString("Dance is Over");
	    }
        }
        return;
    }

}